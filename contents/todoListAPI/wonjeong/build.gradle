/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id "org.springframework.boot" version "2.5.6"
}

repositories {
    mavenCentral()
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.6'
    api 'org.springframework.boot:spring-boot-starter-web:2.5.6'
    api 'org.springframework.boot:spring-boot-configuration-processor:2.5.6'
    api 'org.projectlombok:lombok:1.18.22'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation 'org.springframework.boot:spring-boot-starter-security:2.5.15'
    testImplementation 'org.springframework.security:spring-security-test:5.1.13.RELEASE'
    implementation 'com.mysql:mysql-connector-j:8.0.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    api 'io.springfox:springfox-swagger2:2.9.2'
    api 'io.springfox:springfox-swagger-ui:2.9.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.6'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
    implementation 'javax.activation:activation:1.1.1'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    // Unable to load class named [io.jsonwebtoken.impl.DefaultClaims] 문제를 해결하기 위한 종속성
    // 밑 두 줄
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.15'
    // 테스트 코드에서도 Lombok을 인식 가능하게 해준다 그러면 test 에서도 사용가능
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'


}

group = 'com.appcenter'
version = '0.0.1-SNAPSHOT'
description = 'HelloJPAwithDAO-Springboot'
java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
